/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kradac.despachos.interfaz;

import com.kradac.despachos.administration.Person;
import com.kradac.despachos.administration.RolUser;
import com.kradac.despachos.administration.User;
import com.kradac.despachos.methods.Functions;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dalton
 */
public class FrameUser extends javax.swing.JFrame {

    private DefaultTableModel modelTableUser;
    private boolean isValidUser = false;
    private boolean isValidPassword = false;

    /**
     * Creates new form Person
     */
    public FrameUser() {
        initComponents();
        loadComponent();
    }

    private void loadComponent() {
        modelTableUser = (DefaultTableModel) tblUser.getModel();
        for (User u : Principal.listUser.getUsers()) {
            modelTableUser.addRow(changeToArrayUser(u));
        }

        for (RolUser ru : Principal.listRolUser.getRolUsers()) {
            cbxRolUser.addItem(ru.getRolUser());
        }

        for (Person p : Principal.listPerson.getPersons()) {
            cbxPerson.addItem(p.getLastname() + " " + p.getName());
        }
    }

    private String[] changeToArrayUser(User user) {
        String[] dataUser = {
            user.getUser(),
            user.getRolUser().getRolUser(),
            user.getPerson().getLastname() + " " + user.getPerson().getName()
        };
        return dataUser;
    }

    private void clear() {
        btnDelete.setEnabled(false);
        btnRefresh.setEnabled(false);

        txtUser.setText("");
        txtPassword.setText("");
    }

    private void delete() {
        int rowSelected = tblUser.getSelectedRow();
        clear();
        if (Principal.listPerson.deletePerson(tblUser.getValueAt(rowSelected, 0).toString())) {
            modelTableUser.removeRow(rowSelected);
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar la Persona de la Lista");
        }
    }

    private void add() {
        if (isValidUser && isValidPassword) {
            char[] chrPass = txtPassword.getPassword();
            String strPass = "";

            for (int i = 0; i < chrPass.length; i++) {
                strPass += chrPass[i];
            }

            User u = new User(txtUser.getText(), strPass, Principal.listRolUser.getRolUserByRol(cbxRolUser.getSelectedItem().toString()),
                    Principal.listPerson.getPersonByPerson(cbxPerson.getSelectedItem().toString()));

            if (Principal.listUser.addNewUser(u)) {
                JOptionPane.showMessageDialog(this, "La Persona ya Existe en la lista", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                modelTableUser.addRow(changeToArrayUser(u));
                clear();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Compruebe que los campos Requeridos sean los correctos (Usuario, Contraseña)", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbxRolUser = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        cbxPerson = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnRefresh = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Usuarios");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/com/kradac/despachos/img/usuarios.png")).getImage());
        setResizable(false);

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Rol", "Persona"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblUserMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);
        if (tblUser.getColumnModel().getColumnCount() > 0) {
            tblUser.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Usuarios");

        jLabel2.setText("Usuario:");

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });
        txtUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserFocusLost(evt);
            }
        });
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        jLabel11.setText("Rol:");

        jLabel12.setText("Persona:");

        jLabel13.setText("Contraseña:");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxPerson, 0, 160, Short.MAX_VALUE)
                    .addComponent(txtPassword)
                    .addComponent(cbxRolUser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbxRolUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kradac/despachos/img/actualizar.png"))); // NOI18N
        btnRefresh.setToolTipText("Actualizar");
        btnRefresh.setEnabled(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kradac/despachos/img/agregar persona.png"))); // NOI18N
        btnAdd.setToolTipText("Agregar Persona");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kradac/despachos/img/eliminar persona.png"))); // NOI18N
        btnDelete.setToolTipText("Eliminar Persona");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kradac/despachos/img/limpiar.png"))); // NOI18N
        btnClear.setToolTipText("Limpiar Campos");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(313, 313, 313))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblUserMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMousePressed
        int intClicks = evt.getClickCount();
        if (intClicks == 1) {
            int rowSelected = tblUser.getSelectedRow();
            String user = tblUser.getValueAt(rowSelected, 0).toString();

            User u = Principal.listUser.getUserByUser(user);
            txtUser.setText(u.getUser());
            cbxRolUser.setSelectedIndex(u.getRolUser().getIdRolUser() - 1);
            cbxPerson.setSelectedItem(u.getPerson().getLastname() + " " + u.getPerson().getName());
            txtPassword.setText(u.getPassword());

            btnRefresh.setEnabled(true);
            btnDelete.setEnabled(true);
        }
    }//GEN-LAST:event_tblUserMousePressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        add();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        int rowSelected = tblUser.getSelectedRow();
        String user = txtUser.getText(), rol = cbxRolUser.getSelectedItem().toString(), namePerson = cbxPerson.getSelectedItem().toString();
        char[] chrPass = txtPassword.getPassword();
        String strPass = "";

        for (int i = 0; i < chrPass.length; i++) {
            strPass += chrPass[i];
        }
        
        User u = new User(txtUser.getText(), strPass, Principal.listRolUser.getRolUserByRol(cbxRolUser.getSelectedItem().toString()),
                Principal.listPerson.getPersonByPerson(cbxPerson.getSelectedItem().toString()));

        if (Principal.listUser.updateUser(u, tblUser.getValueAt(rowSelected, 0).toString())) {
            modelTableUser.setValueAt(user, rowSelected, 0);
            modelTableUser.setValueAt(rol, rowSelected, 1);
            modelTableUser.setValueAt(namePerson, rowSelected, 2);
            clear();
            JOptionPane.showMessageDialog(this, "Datos Actualizados Correctamente");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualiar la Información", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        if (txtUser.getText().isEmpty()) {
            isValidUser = false;
        } else {
            if (txtUser.getText().length() > 45) {
                JOptionPane.showMessageDialog(this, "El Numero de Caracteres Excede el Limite (45)", "ERROR", JOptionPane.ERROR_MESSAGE);
                isValidUser = false;
            } else {
                isValidUser = true;
            }
        }
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped

    }//GEN-LAST:event_txtUserKeyTyped

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed

    }//GEN-LAST:event_txtUserKeyPressed

    private void txtUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserFocusLost
        if (txtUser.getText().isEmpty()) {
            isValidUser = false;
        } else {
            if (txtUser.getText().length() > 45) {
                JOptionPane.showMessageDialog(this, "El Numero de Caracteres Excede el Limite (45)", "ERROR", JOptionPane.ERROR_MESSAGE);
                isValidUser = false;
            } else {
                isValidUser = true;
            }
        }
    }//GEN-LAST:event_txtUserFocusLost

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        char[] chrPass = txtPassword.getPassword();
        String strPass = "";

        for (int i = 0; i < chrPass.length; i++) {
            strPass += chrPass[i];
        }

        if (strPass.equals("")) {
            isValidPassword = false;
        } else {
            if (strPass.length() > 45) {
                JOptionPane.showMessageDialog(this, "El Numero de Caracteres Excede el Limite (45)", "ERROR", JOptionPane.ERROR_MESSAGE);
                isValidPassword = false;
            } else {
                isValidPassword = true;
            }
        }
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        char[] chrPass = txtPassword.getPassword();
        String strPass = "";

        for (int i = 0; i < chrPass.length; i++) {
            strPass += chrPass[i];
        }

        if (strPass.equals("")) {
            isValidPassword = false;
        } else {
            if (strPass.length() > 45) {
                JOptionPane.showMessageDialog(this, "El Numero de Caracteres Excede el Limite (45)", "ERROR", JOptionPane.ERROR_MESSAGE);
                isValidPassword = false;
            } else {
                isValidPassword = true;
            }
        }
    }//GEN-LAST:event_txtPasswordFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox cbxPerson;
    private javax.swing.JComboBox cbxRolUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUser;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
